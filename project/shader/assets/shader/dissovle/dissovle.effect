// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.
 
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        dissolveMap: { value: white } # 溶解贴图
        dissolveThreshold: { value: 0.5, slider: true, editor: { range: [0, 1, 0.01] } }
}%
 
 
CCProgram vs %{
  precision highp float;
 
  #include <cc-global>
  #include <cc-local>
 
  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;
 
  in vec2 a_uv0;
  out vec2 v_uv0;
 
  void main () {
    vec4 pos = vec4(a_position, 1);
 
    pos = cc_matViewProj * pos;
 
    v_uv0 = a_uv0;
 
    v_color = a_color;
 
    gl_Position = pos;
  }
}%
 
 
CCProgram fs %{
  precision highp float;

  #include <texture>
 
  in vec4 v_color;
 
  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform sampler2D dissolveMap;
  uniform DissolveUniforms{
    float dissolveThreshold; // 溶解阈值
  };
 
  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    CCTexture(texture, v_uv0, o);
    o *= v_color;

    vec4 dissolveColor = texture(dissolveMap, v_uv0);
    if(dissolveColor.r < dissolveThreshold){
      discard;
    }else if(dissolveColor.r > dissolveThreshold && dissolveColor.r < dissolveThreshold + 0.05){
      o.a = 0.5;
    }else if(dissolveColor.r > dissolveThreshold + 0.05 && dissolveColor.r < dissolveThreshold + 0.1){
      o.a = 0.75;
    }
 
    gl_FragColor = o.rgba;
  }
}%
